<Window x:Class="DoAn1.UI.Windows.ViewOrder"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DoAn1.UI.Windows"
        xmlns:userControl="clr-namespace:DoAn1.UI.UserControls"
        xmlns:materialIcons="clr-namespace:Material.Icons.WPF;assembly=Material.Icons.WPF"
        xmlns:icon="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:properties="clr-namespace:DoAn1.Properties"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        Title="Order Management - Dashboard" Height="720" Width="1080" Loaded="ViewOrder_Loaded">

    <Window.Resources>
        <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
            <Setter Property="Margin" Value="0 4 0 0" />
            <Setter Property="Background" Value="#FFFFFF"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
            <Setter Property="ValidationErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border x:Name="DGR_Border" Padding="0 8" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="True">
                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <DataGridDetailsPresenter Grid.Column="1" Grid.Row="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                            </SelectiveScrollingGrid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#a6774e"/>
                    <Setter Property="Foreground" Value="#ffffff"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#a6774e"/>
                    <Setter Property="Foreground" Value="#ffffff"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="#dfdfdf"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Width" Value="8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="SizeWE"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DataGridColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#69717D" />
            <Setter Property="Margin" Value="15 0 15 10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <Grid>
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                                </Grid>
                            </Border>
                            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Margin" Value="15 0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#222528"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="HeadersVisibility" Value="Column" />
            <Setter Property="Margin" Value="0 10 0 0" />
            <Setter Property="Grid.Row" Value="5" />
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="SelectionUnit" Value="FullRow" />
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="CanUserDeleteRows" Value="False" />
            <Setter Property="CanUserReorderColumns" Value="False" />
            <Setter Property="CanUserResizeRows" Value="False" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="GridLinesVisibility" Value="None" />
            <Setter Property="ColumnWidth" Value="*" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" ViewportSize="{TemplateBinding ViewportHeight}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="gridEditButton" TargetType="Button">
            <Setter Property="Background" Value="#D95F18" />
            <Setter Property="BorderBrush" Value="#593122" />
            <Setter Property="Foreground" Value="#ffffff" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="5" BorderThickness="1" CornerRadius="5">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#D95F18" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="gridRemoveButton" TargetType="Button" BasedOn="{StaticResource gridEditButton}">
            <Setter Property="Background" Value="#D32F2F" />
            <Setter Property="BorderBrush" Value="#B71C1C" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F44336" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="gridDetailButton" TargetType="Button">
            <Setter Property="Background" Value="#6495ED" />
            <!-- Màu nền xanh nhạt -->
            <Setter Property="BorderBrush" Value="#4682B4" />
            <!-- Màu đường viền -->
            <Setter Property="Foreground" Value="#ffffff" />
            <!-- Màu chữ trắng -->
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <!-- Loại bỏ hiệu ứng focus -->
            <Setter Property="VerticalAlignment" Value="Center" />
            <!-- Căn chỉnh dọc -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="5" BorderThickness="1" CornerRadius="5">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#ADD8E6" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="pagingButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#6c7682" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" Padding="10 5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 0 0 1"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#784ff2" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="pagingButtonIcon" TargetType="Icon:PackIconMaterial">
            <Setter Property="Width" Value="10" />
            <Setter Property="Height" Value="10" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>


    </Window.Resources>



    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <userControl:NavigationUC/>

        <Grid Grid.Column="1" Margin="30 20 20 20">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <!--Page Title -->
            <TextBlock Text="Order management" Grid.Row="0" FontSize="32" FontWeight="SemiBold" Margin="0 20 0 0" HorizontalAlignment="Left" />
            <!--Add Button -->

            <userControl:TextOnlyButtonUC UC_Text="Add New Order" Grid.Row="0" HorizontalAlignment="Right" Click="addButton_Click" Height="35" Width="150"/>
            <!--Search Textbox-->
            <Grid Width="380" Grid.Row="1" HorizontalAlignment="Left" Margin="0,0,0,30" icon:Grid.RowSpan="2">
                <TextBlock x:Name="SearchTextBlock"  Margin="20 0" VerticalAlignment="Center" Foreground="#b0b9c6" IsHitTestVisible="False" Panel.ZIndex="1" Text="Search here..." Visibility="Visible"/>
                <TextBox x:Name="txtSearch" Style="{StaticResource textboxSearch}" KeyDown="txtSearch_KeyDown" KeyUp="txtSearch_KeyDown" Foreground="Black"/>
                <Button Background="#00000000" Width="30" Height="30" VerticalAlignment="Center" HorizontalAlignment="Left" Click="SearchButton_Click" RenderTransformOrigin="-0.273,0.67" Margin="338,0,0,0" BorderThickness="0">
                    <Button.Content>
                        <Icon:PackIconMaterial Kind="Magnify" Width="15" Height="15" Foreground="#b0b9c6" />
                    </Button.Content>
                </Button>


            </Grid>

            <Grid Width="106" Grid.Row="1" HorizontalAlignment="Right" Margin="0,0,150,30" icon:Grid.RowSpan="2" >
                <userControl:TextOnlyButtonUC x:Name="dateButton" UC_Text="Date Created" Grid.Row="0" HorizontalAlignment="Center" Click="dateCreated_Click" Height="35" Width="150"/>
            </Grid>
            <Grid Width="380" Grid.Row="1" HorizontalAlignment="Right" Margin="0,0,0,30" icon:Grid.RowSpan="2">
                <icon:Grid.ColumnDefinitions>
                    <icon:ColumnDefinition Width="17*"/>
                    <icon:ColumnDefinition Width="363*"/>
                </icon:Grid.ColumnDefinitions>
                <ComboBox Name ="sortCombobox" FontSize="14" SelectionChanged="ComboBox_SelectionChanged" SelectedIndex="0"
       Style="{DynamicResource theComboBox}" Padding="15,5,15,5" HorizontalContentAlignment="Left" FontWeight="SemiBold"
         VerticalAlignment="Top"
            MinWidth="100"
            MaxWidth="375"
            ItemContainerStyle="{DynamicResource theComboBoxItem}" Margin="254,10,9,0" icon:Grid.Column="1">
                    <ComboBoxItem>Latest</ComboBoxItem>
                    <ComboBoxItem>Oldest</ComboBoxItem>
                </ComboBox>
            </Grid>

            <Separator Height="1" Grid.Row="2" Background="#593122" Margin="0 10 0 10"/>

            <!--Counter -->
            <TextBlock d:Text="5 Order" Grid.Row="3" FontSize="18" FontWeight="SemiBold" Foreground="Black" HorizontalAlignment="Left" VerticalAlignment="Center"/>

            <DataGrid Grid.Row="3" RowStyle="{StaticResource DataGridRowStyle1}" ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle1}"
          CellStyle="{StaticResource DataGridCellStyle1}" Style="{StaticResource DataGridStyle1}" x:Name="orderDataGrid">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="ID" IsReadOnly="True" CanUserResize="False" Width="1*" Binding="{Binding Id}"/>
                    <DataGridTextColumn Header="Customer Name" IsReadOnly="True" CanUserResize="False" Width="3*" Binding="{Binding CustomerName}"/>
                    <DataGridTextColumn Header="Shipping Address" IsReadOnly="True" CanUserResize="False" Width="5*" Binding="{Binding ShippingAddress}"/>
                    <DataGridTextColumn Header="Total Price" IsReadOnly="True" CanUserResize="False" Width="2.5*" Binding="{Binding TotalPrice}"/>
                    <DataGridTextColumn Header="Created At" IsReadOnly="True" CanUserResize="False" Width="4*" Binding="{Binding CreatedAt}"/>
                    <DataGridTemplateColumn Header="Operations" IsReadOnly="True" Width="4*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" Margin="5">
                                    <Button Margin="5 0 5 0" x:Name="detailButton" Click="detailOrderButton_Click" Style="{StaticResource gridDetailButton}" Content="Detail">
                                    </Button>
                                    <Button Margin="5 0 5 0" x:Name="editButton" Click="editOrderButton_Click" Style="{StaticResource gridEditButton}" Content="Edit">
                                    </Button>
                                    <Button Margin="5 0 5 0" x:Name="deleteButton" Click="deleteOrderButton_Click" Style="{StaticResource gridRemoveButton}" Content="Delete">
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <StatusBar Grid.Row="6" HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal" >
                    <TextBlock Margin="50,0,20,0" HorizontalAlignment="Center" VerticalAlignment="Center"  FontWeight="Bold" FontSize="16">
                        <Run Text="Showing"/>
                        <Run x:Name="showingItemsText" d:Text="12"/>
                        <Run Text="of"/>
                        <Run x:Name="totalItemsText" d:Text="120"/>
                        <Run Text="items"/>
                    </TextBlock>
                    <Button Style="{StaticResource pagingButton}" Click="PreviousPageBtn_Click">
                        <Icon:PackIconMaterial Kind="ChevronLeft" Style="{StaticResource pagingButtonIcon}"/>
                    </Button>
                    <TextBlock Margin="10, 0, 10, 0"  HorizontalAlignment="Center" VerticalAlignment="Center"  FontWeight="Bold" FontSize="16">
                        <Run Text="Page"/>
                        <Run x:Name="currentPageText" d:Text="1"/>
                        <Run Text="/"/>
                        <Run x:Name="totalPagesText" d:Text="2"/>
                    </TextBlock>
                    <Button Style="{StaticResource pagingButton}" Click="NextPageBtn_Click">
                        <Icon:PackIconMaterial Kind="ChevronRight" Style="{StaticResource pagingButtonIcon}"/>
                    </Button>
                </StackPanel>
            </StatusBar>
        </Grid>


    </Grid>
</Window>
