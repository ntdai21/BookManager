<Window x:Class="DoAn1.UI.Windows.ViewProduct"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DoAn1.UI.Windows"
        xmlns:userControl="clr-namespace:DoAn1.UI.UserControls"
        xmlns:materialIcons="clr-namespace:Material.Icons.WPF;assembly=Material.Icons.WPF"
        xmlns:properties="clr-namespace:DoAn1.Properties"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        xmlns:converter="clr-namespace:DoAn1.UI.Converters"
        Title="Quản lý sách - Dashboard" Height="720" Width="1080"
        Loaded="Window_Loaded">
    <Window.Resources>
        <converter:RelativeToAbsoluteConverter x:Key="absoluteConverter"/>
        <converter:StringNullOrEmptyToVisibilityConverter x:Key="StringNullOrEmptyToVisibilityConverter"/>
        <converter:FloatToVNDConverter x:Key="floatToVNDConverter"/>

        <Style TargetType="TextBox" x:Key="PlaceholderTextBoxStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="5">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" />
                                <TextBlock x:Name="PlaceholderText" Text="{TemplateBinding Tag}" 
                                           Foreground="Gray" Visibility="Collapsed" 
                                           Margin="5,0,0,0" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                    <Condition Property="IsFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton" Template="{DynamicResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false"
                                      ClickMode="Press" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            </ToggleButton>
                            <ContentPresenter x:Name="ContentSite" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="Center" HorizontalAlignment="Left"
                                      Margin="3,3,23,3" IsHitTestVisible="False"/>
                            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left"
                                 VerticalAlignment="Center" Margin="3,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False"
                               PopupAnimation="Slide">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="White" BorderThickness="1" BorderBrush="Gray"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DimGray"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">
                                    <Border x:Name="Border" Padding="2" SnapsToDevicePixels="True">
                                        <ContentPresenter/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsHighlighted" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="LightGray"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="Gray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" Background="Transparent" BorderThickness="0"/>
                <Path x:Name="Arrow" Grid.Column="1" Fill="Gray" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="Transparent"/>
        </ControlTemplate>

        <Style x:Key="pagingButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#6C7682" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Margin" Value="1 0" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" Padding="10 5">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 0 0 1"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#593122" />
                    <Setter Property="Foreground" Value="#ffffff" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBox" x:Key="rangeTextBox">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <userControl:NavigationUC/>

        <!-- Main section-->
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <!-- Search textbox-->
                <RowDefinition Height="*"/>
                <!-- Title -->
                <RowDefinition Height="1.4*"/>
                <!-- Filter -->
                <RowDefinition Height="1.5*"/>
                <!-- Catalog -->
                <RowDefinition Height="6*"/>
                <!-- Pagination -->
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!--Search textbox -->
            <Grid Grid.Row="0"   HorizontalAlignment="Stretch" Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBox Grid.Column="0" x:Name="searchTextbox" Style="{StaticResource PlaceholderTextBoxStyle}" 
                     Tag="Nhập nội dung vào đây..." Margin="0 5 10 5" KeyDown="searchTextbox_KeyDown" Padding="6" FontSize="14"/>
                <userControl:IconOnlyButtonUC Grid.Column="1" UC_Kind="CardSearchOutline" Loaded="IconOnlyButtonUC_Loaded" Click="IconOnlyButtonUC_Click"/>
            </Grid>

            <!--Title-->
            <DockPanel Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10" LastChildFill="False">
                <TextBlock Text="Book management" FontSize="28" FontWeight="SemiBold"
                           DockPanel.Dock="Left"  VerticalAlignment="Center"/>
                <StackPanel Orientation="Vertical" DockPanel.Dock="Right">
                    <userControl:TextOnlyButtonUC  UC_Text="Add new book" x:Name="addButton" Click="addButton_Click" Width="150" Height="30" Margin="0 5 0 0"/>
                    <userControl:TextOnlyButtonUC  UC_Text="Import from csv" x:Name="importButton" Click="importButton_Click" Width="150" Height="30" Margin="0 5 0 0"/>
                </StackPanel>
            </DockPanel>

            <!--Filter -->
            <DockPanel Grid.Row="2" LastChildFill="False">
                <Separator DockPanel.Dock="Top"/>
                <!--Filter by category -->
                <ComboBox Name="categoryComboBox" SelectionChanged="categoryComboBox_SelectionChanged" Style="{StaticResource CustomComboBoxStyle}" DockPanel.Dock="Left" Height="37" Width="125" SelectedIndex="0" Margin="10">
                    <ComboBox.ItemTemplate >
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <!--Filter by price range -->
                <StackPanel VerticalAlignment="Center" DockPanel.Dock="Left">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Minimum" VerticalAlignment="Center" Margin="0 0 10 0"/>
                        <Slider Name="minSlider" Width="250" Minimum="0" Maximum="1000000" Value="0" ValueChanged="minSlider_ValueChanged"
                                TickPlacement="BottomRight" TickFrequency="1" IsSnapToTickEnabled="True" VerticalAlignment="Center"/>
                        <TextBox Text="{Binding ElementName=minSlider, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                 HorizontalAlignment="Center" Width="60" Style="{StaticResource rangeTextBox}" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Maxixum" Margin="0 0 10 0" VerticalAlignment="Center"/>
                        <Slider Name="maxSlider" Width="250" Minimum="0" Maximum="1000000" Value="1000000"  ValueChanged="maxSlider_ValueChanged"
                                TickPlacement="BottomRight" TickFrequency="1" IsSnapToTickEnabled="True" VerticalAlignment="Center" />
                        <TextBox Text="{Binding ElementName=maxSlider, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                 HorizontalAlignment="Center" Width="60" Style="{StaticResource rangeTextBox}"/>
                    </StackPanel>
                </StackPanel>

                <!--Sort by -->
                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" VerticalAlignment="Center" Margin="0 0 10 0">
                    <StackPanel x:Name="stackPanel"  Visibility="Collapsed" Margin="0 0 10 0" Orientation="Horizontal" VerticalAlignment="Center">
                        <StackPanel Orientation="Vertical" Margin="10 0 10 0">
                            <Label FontWeight="SemiBold">Sort by Name</Label>
                            <RadioButton GroupName="nameSort" Checked="NameSort_Checked">ASC</RadioButton>
                            <RadioButton GroupName="nameSort" Checked="NameSort_Checked">DES</RadioButton>
                            <RadioButton GroupName="nameSort" Checked="NameSort_Checked" >None</RadioButton>
                        </StackPanel>

                        <StackPanel Orientation="Vertical" Margin="10 0 10 0">
                            <Label FontWeight="SemiBold">Sort by Price</Label>
                            <RadioButton GroupName="priceSort" Checked="PriceSort_Checked">ASC</RadioButton>
                            <RadioButton GroupName="priceSort" Checked="PriceSort_Checked">DES</RadioButton>
                            <RadioButton GroupName="priceSort" Checked="PriceSort_Checked" >None</RadioButton>
                        </StackPanel>

                    </StackPanel>
                    <Button Background="Transparent" BorderBrush="Transparent" BorderThickness="0" 
                        x:Name="showSortOption" Content="Open sort +" Click="showSortOption_Click"/>
                </StackPanel>


            </DockPanel>

            <ListView Grid.Row="3"  Name="bookListView" ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderBrush="Transparent"
                    Height="auto" Width="auto" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="Transparent" Background="White" BorderThickness="1" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="3*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <Image Grid.Column="0" Grid.ColumnSpan="2" Width="200" Height="250" Margin="5"  
                                    Source="{Binding Cover, Converter={StaticResource absoluteConverter }}"/>
                                <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Background="White">
                                    <TextBlock Grid.Row="1" Grid.ColumnSpan="2"  FontSize="16" FontWeight="SemiBold" 
                                        TextWrapping="WrapWithOverflow" Text="{Binding Name}" Width="200" Margin="5" Height="40"  />
                                    <TextBlock Grid.Row="1" Grid.ColumnSpan="2"  FontSize="12" FontWeight="Light" 
                                        TextWrapping="WrapWithOverflow" Text="{Binding Price, Converter={StaticResource floatToVNDConverter}}" Width="200"   />
                                    <TextBlock Grid.Row="1" Grid.ColumnSpan="2"  FontSize="12" FontWeight="Light" 
                                        TextWrapping="WrapWithOverflow" Text="{Binding Author}" Width="200"/>

                                </StackPanel>

                                <Button x:Name="viewDetailButton"  Grid.Row="2" Grid.ColumnSpan="2" Background="#593122" Foreground="#ffffff" Height="35"  Margin="0 5 0 0" FontSize="13" HorizontalAlignment="Stretch" Click="viewDetailButton_Click">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="View detail"/>
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </Border>
                        
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
            </ListView>

            <!--Pagination -->
            <!--Pagination Section -->
            <Border Grid.Row="4" HorizontalAlignment="Right" BorderBrush="#DEE4EC" BorderThickness="1" 
                   CornerRadius="5" Padding="5" Background="White" Margin="0 10 10 10">
                <StackPanel Orientation="Horizontal">
                    <Button x:Name="firstPageButton" Style="{StaticResource pagingButton}" Content="&lt;&lt;" Click="firstPageButton_Click"/>
                    <Rectangle Width="1" Fill="#DEE4EC" Margin="3 7"/>
                    <Button x:Name="previousPageButton" Style="{StaticResource pagingButton}" Content="&lt;" Click="previousPageButton_Click"/>
                    <Rectangle Width="1" Fill="#DEE4EC" Margin="3 7"/>

                    <Button x:Name="currentPageButton" Style="{StaticResource pagingButton}" d:Content="1/4" Content="{Binding currentPage}" Background="#593122" Foreground="White"/>

                    <Rectangle Width="1" Fill="#DEE4EC" Margin="3 7"/>
                    <Button x:Name="nextPageButton" Click="nextPageButton_Click" Style="{StaticResource pagingButton}" Content="&gt;"/>
                    <Rectangle Width="1" Fill="#DEE4EC" Margin="3 7"/>
                    <Button x:Name="lastPageButton" Click="lastPageButton_Click" Style="{StaticResource pagingButton}" Content="&gt;&gt;"/>
                </StackPanel>
            </Border>
        </Grid>

    </Grid>
</Window>
